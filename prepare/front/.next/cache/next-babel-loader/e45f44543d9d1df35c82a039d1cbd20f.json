{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // 배포용. devTools 연결 안해놓음\n  : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용일때는 이렇게 추가해주면 됨. devTools 연결해줌\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"kim\"\n  });\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","type","data","wrapper","debug"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares)) // 배포용. devTools 연결 안해놓음\n      : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용일때는 이렇게 추가해주면 됨. devTools 연결해줌\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"kim\",\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \" development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,gBAAgB,GACpB,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAEH,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,cAAc,GAAGX,oBAAoB,EAAE;EAC7C,MAAMY,WAAW,GAAG,CAACD,cAAc,EAAER,gBAAgB,CAAC;EACtD,MAAMU,QAAQ,GACZ,QACIhB,OAAO,CAACD,eAAe,CAAC,GAAGgB,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCb,mBAAmB,CAACH,eAAe,CAAC,GAAGgB,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAME,KAAK,GAAGhB,WAAW,CAACG,OAAO,EAAEY,QAAQ,CAAC;EAC5CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACd,QAAQ,CAAC;EAC7CY,KAAK,CAACV,QAAQ,CAAC;IACba,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,OAAOJ,KAAK;AACd,CAAC;AAED,MAAMK,OAAO,GAAGxB,aAAa,CAACe,cAAc,EAAE;EAC5CU,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}