{"ast":null,"code":"var _jsxFileName = \"/home/edu01/vscode_react_practice/inflearn/prepare/front/pages/_app.js\",\n  _this = this;\n// 모든 페이지의 공통사항들은 여기서 처리한다.\n// index.js 의 컴포넌트가 들어가는곳\nimport React from \"react\";\nimport Head from \"next/head\";\nimport \"antd/dist/antd.css\";\nimport { PropTypes } from \"prop-types\";\nimport wrapper from \"../store/configureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component;\n  return (\n    /*#__PURE__*/\n    // Redux 쓰면 아래 <div>자리에 <Provider stroe=[store>/] 라는걸 넣는다. page를 provider로 감싸줌. 근데 next에서는 provider 안써도 된다.\n    // next-redux-wrapper에서 provider를 제공해주기 때문에 오히려 넣어주면 중복이 발생함\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          charSet: \"utf-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"NodeBird123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, _this)\n  );\n};\n_c = NodeBird;\nNodeBird.prototype = {\n  Component: PropTypes.elementType.isRequired\n};\nexport default _c2 = wrapper.withRedux(NodeBird);\nvar _c, _c2;\n$RefreshReg$(_c, \"NodeBird\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Head","PropTypes","wrapper","NodeBird","Component","prototype","elementType","isRequired","withRedux"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/pages/_app.js"],"sourcesContent":["// 모든 페이지의 공통사항들은 여기서 처리한다.\n// index.js 의 컴포넌트가 들어가는곳\nimport React from \"react\";\nimport Head from \"next/head\";\nimport \"antd/dist/antd.css\";\nimport { PropTypes } from \"prop-types\";\n\nimport wrapper from \"../store/configureStore\";\n\nconst NodeBird = ({ Component }) => {\n  return (\n    // Redux 쓰면 아래 <div>자리에 <Provider stroe=[store>/] 라는걸 넣는다. page를 provider로 감싸줌. 근데 next에서는 provider 안써도 된다.\n    // next-redux-wrapper에서 provider를 제공해주기 때문에 오히려 넣어주면 중복이 발생함\n    <div>\n      <Head>\n        <meta charSet=\"utf-8\" />\n        <title>NodeBird123</title>\n      </Head>\n      <Component />\n    </div>\n  );\n};\n\nNodeBird.prototype = {\n  Component: PropTypes.elementType.isRequired,\n};\n\nexport default wrapper.withRedux(NodeBird);\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAO,oBAAoB;AAC3B,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAOC,OAAO,MAAM,yBAAyB;AAAC;AAE9C,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAAsB;EAAA,IAAhBC,SAAS,QAATA,SAAS;EAC3B;IAAA;IACE;IACA;IACA;MAAA,wBACE,QAAC,IAAI;QAAA,wBACH;UAAM,OAAO,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,SAAG,eACxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,SAA0B;MAAA;QAAA;QAAA;QAAA;MAAA,SACrB,eACP,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,SAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACT;AAEV,CAAC;AAAC,KAZID,QAAQ;AAcdA,QAAQ,CAACE,SAAS,GAAG;EACnBD,SAAS,EAAEH,SAAS,CAACK,WAAW,CAACC;AACnC,CAAC;AAED,qBAAeL,OAAO,CAACM,SAAS,CAACL,QAAQ,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}