{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/edu01/vscode_react_practice/inflearn/prepare/front/components/PostCard.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"antd/lib/card/Card\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { Avatar, Popover, Button, List, Comment } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    Liked = _useState2[0],\n    setLiked = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    commentFormOpened = _useState4[0],\n    setCommentFormOpened = _useState4[1];\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n    // 토글은 이런 식으로 만들면 됨. true->false / false->true로\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  // const id = me && me.id -> me?.id 로 줄일 수 있음. 이 방식을 옵셔널 체이닝 이라고 함\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n_s(PostCard, \"gmxIpytXU0OH/QfAjc+gzGBcxx4=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n    // Likers: PropTypes.arrayOf(PropTypes.object),\n    // RetweetId: PropTypes.number,\n    // Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useCallback","PropTypes","Card","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Avatar","Popover","Button","List","Comment","useSelector","PostImages","PostCard","post","useState","Liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","id","state","user","me","Images","liked","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"antd/lib/card/Card\";\nimport {\n  EllipsisOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  RetweetOutlined,\n  HeartTwoTone,\n} from \"@ant-design/icons\";\nimport { Avatar, Popover, Button, List, Comment } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({ post }) => {\n  const [Liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n    // 토글은 이런 식으로 만들면 됨. true->false / false->true로\n  }, []);\n\n  const id = useSelector((state) => state.user.me?.id);\n  // const id = me && me.id -> me?.id 로 줄일 수 있음. 이 방식을 옵셔널 체이닝 이라고 함\n\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      <List />\n      <Comment />\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    // Likers: PropTypes.arrayOf(PropTypes.object),\n    // RetweetId: PropTypes.number,\n    // Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}