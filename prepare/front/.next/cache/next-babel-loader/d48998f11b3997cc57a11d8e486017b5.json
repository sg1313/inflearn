{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\n\n// // 기본 state를 바꾸는 action\n// const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   date: \"boogiecho\",\n// };\n\n// async action creator\n\n// action creator\n// const changeNickname = (data) => {\n//   return {\n//     type: \"CHANGE_NICKNAME\",\n//     data,\n//   };\n// };\n\n// (이전상태, 액션) 을 통해서 => 다음상태 로 만드러 내는 함수\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","rootReducer","index","state","action","type","console","log","payload"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\n\n// // 기본 state를 바꾸는 action\n// const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   date: \"boogiecho\",\n// };\n\n// async action creator\n\n// action creator\n// const changeNickname = (data) => {\n//   return {\n//     type: \"CHANGE_NICKNAME\",\n//     data,\n//   };\n// };\n\n// (이전상태, 액션) 을 통해서 => 다음상태 로 만드러 내는 함수\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return { ...state, ...action.payload };\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post,\n});\n\nexport default rootReducer;\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,KAAK,EAAE,iBAAwB;IAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;IAAA,IAAEC,MAAM;IACxB,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAKR,OAAO;QACVS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;QAC9B,uCAAYD,KAAK,GAAKC,MAAM,CAACI,OAAO;MAEtC;QACE,OAAOL,KAAK;IAAC;EAEnB,CAAC;EACDJ,IAAI,EAAJA,IAAI;EACJC,IAAI,EAAJA;AACF,CAAC,CAAC;AAEF,eAAeC,WAAW"},"metadata":{},"sourceType":"module"}