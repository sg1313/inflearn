{"ast":null,"code":"import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\";\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignUp)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","call","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","data","post","logIn","action","result","type","err","console","error","response","logOutAPI","logOut","signUpAPI","signUp","log","watchLogin","watchLogout","watchSignUp","userSaga"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/sagas/user.js"],"sourcesContent":["import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n} from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignUp)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,oBAAoB;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,QACV,kBAAkB;AAEzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtB,OAAOX,KAAK,CAACY,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AACxC;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMhB,IAAI,CAACW,QAAQ,EAAEI,MAAM,CAACH,IAAI,CAAC;IAChD,MAAMd,GAAG,CAAC;MACRmB,IAAI,EAAEf,cAAc;MACpBU,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAMpB,GAAG,CAAC;MACRmB,IAAI,EAAEd,cAAc;MACpBiB,KAAK,EAAEF,GAAG,CAACG,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASU,SAAS,GAAG;EACnB,OAAOrB,KAAK,CAACY,IAAI,CAAC,cAAc,CAAC;AACnC;AAEA,UAAUU,MAAM,GAAG;EACjB,IAAI;IACF,MAAMvB,IAAI,CAACsB,SAAS,CAAC;IACrB,MAAMxB,GAAG,CAAC;MACRmB,IAAI,EAAEV;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOW,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAMpB,GAAG,CAAC;MACRmB,IAAI,EAAEZ,eAAe;MACrBe,KAAK,EAAEF,GAAG,CAACG,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASY,SAAS,CAACZ,IAAI,EAAE;EACvB,OAAOX,KAAK,CAACY,IAAI,CAAC,OAAO,EAAED,IAAI,CAAC;AAClC;AAEA,UAAUa,MAAM,CAACV,MAAM,EAAE;EACvB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMhB,IAAI,CAACwB,SAAS,EAAET,MAAM,CAACH,IAAI,CAAC;IACjDO,OAAO,CAACO,GAAG,CAACV,MAAM,CAAC;IACnB,MAAMlB,GAAG,CAAC;MACRmB,IAAI,EAAEP;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAMpB,GAAG,CAAC;MACRmB,IAAI,EAAET,eAAe;MACrBY,KAAK,EAAEF,GAAG,CAACG,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUe,UAAU,GAAG;EACrB,MAAM5B,UAAU,CAACK,cAAc,EAAEU,KAAK,CAAC;AACzC;AAEA,UAAUc,WAAW,GAAG;EACtB,MAAM7B,UAAU,CAACO,eAAe,EAAEiB,MAAM,CAAC;AAC3C;AAEA,UAAUM,WAAW,GAAG;EACtB,MAAM9B,UAAU,CAACU,eAAe,EAAEgB,MAAM,CAAC;AAC3C;AAEA,eAAe,UAAUK,QAAQ,GAAG;EAClC,MAAMlC,GAAG,CAAC,CAACC,IAAI,CAAC8B,UAAU,CAAC,EAAE9B,IAAI,CAAC+B,WAAW,CAAC,EAAE/B,IAAI,CAACgC,WAAW,CAAC,CAAC,CAAC;AACrE"},"metadata":{},"sourceType":"module"}