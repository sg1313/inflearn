{"ast":null,"code":"var _jsxFileName = \"/home/edu01/vscode_react_practice/inflearn/prepare/front/components/PostCard.js\";\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { Card, Avatar, Popover, Button, List, Comment } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n    // 토글은 이런 식으로 만들면 됨. true->false / false->true로\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  // const id = me && me.id -> me?.id 로 줄일 수 있음. 이 방식을 옵셔널 체이닝 이라고 함\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 27\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n    // Likers: PropTypes.arrayOf(PropTypes.object),\n    // RetweetId: PropTypes.number,\n    // Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useCallback","useState","PropTypes","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Card","Avatar","Popover","Button","List","Comment","useSelector","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","Images","User","nickname","content","Comments","length","item","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  EllipsisOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  RetweetOutlined,\n  HeartTwoTone,\n} from \"@ant-design/icons\";\nimport { Card, Avatar, Popover, Button, List, Comment } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({ post }) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n    // 토글은 이런 식으로 만들면 됨. true->false / false->true로\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const id = useSelector((state) => state.user.me?.id);\n  // const id = me && me.id -> me?.id 로 줄일 수 있음. 이 방식을 옵셔널 체이닝 이라고 함\n\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      <Comment />\n      {commentFormOpened && (\n        <div>\n          <CommentForm />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    // Likers: PropTypes.arrayOf(PropTypes.object),\n    // RetweetId: PropTypes.number,\n    // Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}