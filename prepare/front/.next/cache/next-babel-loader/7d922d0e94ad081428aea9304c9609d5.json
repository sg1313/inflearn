{"ast":null,"code":"var _jsxFileName = \"/home/edu01/vscode_react_practice/inflearn/prepare/front/components/AppLayout.js\";\n// 특정 컴포넌트끼리 공통인 것은 이렇게 layout을 만들어서 개별 컴포넌트에 감싸주면 됨.\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport { Input, Menu, Row, Col } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport UserProfile from \"./UserProfile\";\nimport LoginForm from \"./LoginForm\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchInput = styled(Input.Search)`\n  vertical-align: middle;\n`;\nconst AppLayout = ({\n  children\n}) => {\n  // redux라는 중앙 관리소가 있기 때문에 컴포넌트별로 isLoggedIn 관리 안해도 된다.\n  // 기존의 useState는 지우고 아래와 같이 사용한다.\n  // const isLoggedIn = useSelector((state) => state.user.isLoggedIn);\n  // 또는 유저 자체를 받아와서 user 안에서 isloggedIn을 구조분해하는 방식으로 쓸 수도 있다\n  const {\n    me\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uB178\\uB4DC\\uBC84\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD504\\uB85C\\uD544\\uC785\\uB2C8\\uB2E4234\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          enterButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: me ? /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.zerocho.com\",\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: \"Made by ZeroCho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n// props로 넘기는 애들을 propTypes라는 모듈로 검사하기 (별도 설치 필요)\nAppLayout.propTypes = {\n  children: propTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"names":["React","propTypes","Link","Input","Menu","Row","Col","useSelector","UserProfile","LoginForm","styled","SearchInput","Search","AppLayout","children","me","state","user","node","isRequired"],"sources":["/home/edu01/vscode_react_practice/inflearn/prepare/front/components/AppLayout.js"],"sourcesContent":["// 특정 컴포넌트끼리 공통인 것은 이렇게 layout을 만들어서 개별 컴포넌트에 감싸주면 됨.\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport { Input, Menu, Row, Col } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport UserProfile from \"./UserProfile\";\nimport LoginForm from \"./LoginForm\";\nimport styled from \"styled-components\";\n\nconst SearchInput = styled(Input.Search)`\n  vertical-align: middle;\n`;\n\nconst AppLayout = ({ children }) => {\n  // redux라는 중앙 관리소가 있기 때문에 컴포넌트별로 isLoggedIn 관리 안해도 된다.\n  // 기존의 useState는 지우고 아래와 같이 사용한다.\n  // const isLoggedIn = useSelector((state) => state.user.isLoggedIn);\n  // 또는 유저 자체를 받아와서 user 안에서 isloggedIn을 구조분해하는 방식으로 쓸 수도 있다\n  const { me } = useSelector((state) => state.user);\n\n  return (\n    <div>\n      <Menu mode=\"horizontal\">\n        <Menu.Item>\n          <Link href=\"/\">\n            <a>노드버드</a>\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link href=\"/profile\">\n            <a>프로필입니다234</a>\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <SearchInput enterButton />\n        </Menu.Item>\n        <Menu.Item>\n          <Link href=\"/signup\">\n            <a>회원가입</a>\n          </Link>\n        </Menu.Item>\n      </Menu>\n      <Row gutter={8}>\n        <Col xs={24} md={6}>\n          {me ? <UserProfile /> : <LoginForm />}\n        </Col>\n        <Col xs={24} md={12}>\n          {children}\n        </Col>\n        <Col xs={24} md={6}>\n          <a\n            href=\"https://www.zerocho.com\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Made by ZeroCho\n          </a>\n        </Col>\n      </Row>\n      {/* AppLayout 안쪽 부분이 children이 된다 */}\n    </div>\n  );\n};\n\n// props로 넘기는 애들을 propTypes라는 모듈로 검사하기 (별도 설치 필요)\nAppLayout.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default AppLayout;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,MAAM;AAC5C,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,WAAW,GAAGD,MAAM,CAACP,KAAK,CAACS,MAAM,CAAE;AACzC;AACA,CAAC;AAED,MAAMC,SAAS,GAAG,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClC;EACA;EACA;EACA;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEjD,oBACE;IAAA,wBACE,QAAC,IAAI;MAAC,IAAI,EAAC,YAAY;MAAA,wBACrB,QAAC,IAAI,CAAC,IAAI;QAAA,uBACR,QAAC,IAAI;UAAC,IAAI,EAAC,GAAG;UAAA,uBACZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAW;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACG,eACZ,QAAC,IAAI,CAAC,IAAI;QAAA,uBACR,QAAC,IAAI;UAAC,IAAI,EAAC,UAAU;UAAA,uBACnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAgB;UAAA;UAAA;UAAA;QAAA;MACX;QAAA;QAAA;QAAA;MAAA,QACG,eACZ,QAAC,IAAI,CAAC,IAAI;QAAA,uBACR,QAAC,WAAW;UAAC,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACjB,eACZ,QAAC,IAAI,CAAC,IAAI;QAAA,uBACR,QAAC,IAAI;UAAC,IAAI,EAAC,SAAS;UAAA,uBAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAW;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACP,QAAC,GAAG;MAAC,MAAM,EAAE,CAAE;MAAA,wBACb,QAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,UAChBF,EAAE,gBAAG,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG,gBAAG,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACjC,eACN,QAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,EAAG;QAAA,UACjBD;MAAQ;QAAA;QAAA;QAAA;MAAA,QACL,eACN,QAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBACjB;UACE,IAAI,EAAC,yBAAyB;UAC9B,MAAM,EAAC,QAAQ;UACf,GAAG,EAAC,qBAAqB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGvB;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV,CAAC;;AAED;AACAD,SAAS,CAACZ,SAAS,GAAG;EACpBa,QAAQ,EAAEb,SAAS,CAACiB,IAAI,CAACC;AAC3B,CAAC;AAED,eAAeN,SAAS"},"metadata":{},"sourceType":"module"}